%======================================================%
% Properties of same_elts judgment
%======================================================%

% Reflexivity: If Δ ≈ Δ', then Δ' ≈ Δ

rec same_elts_refl : (Ψ:ctx) (Δ:[Ψ ⊢ lctx N[]]) [Ψ ⊢ same_elts Δ Δ'] → [Ψ ⊢ same_elts Δ' Δ] =
  / total 1 /
  fn se ⇒ case se of
  | [_ ⊢ se/n] ⇒ [_ ⊢ se/n]
  | [_ ⊢ se/c SE1] ⇒ let [_ ⊢ SE2] = same_elts_refl [_ ⊢ SE1] in [_ ⊢ se/c SE2]
  ;

% Transitivity: If Δ ≈ Δ' and Δ' ≈ Δ'', then Δ ≈ Δ''

rec same_elts_trans : (Ψ:ctx) (Δ:[Ψ ⊢ lctx N[]]) [Ψ ⊢ same_elts Δ Δ'] → [Ψ ⊢ same_elts Δ' Δ''] → [Ψ ⊢ same_elts Δ Δ''] =
  / total d (same_elts_trans d) /
  fn s1, s2 ⇒ case (s1, s2) of
  | ([_ ⊢ se/n],[_ ⊢ se/n]) ⇒ [_ ⊢ se/n]
  | ([_ ⊢ se/c SE1'],[_ ⊢ se/c SE2']) ⇒
    let [_ ⊢ SE3] = same_elts_trans [_ ⊢ SE1'] [_ ⊢ SE2'] in
    [_ ⊢ se/c SE3]
  ;

% Mergeable contexts contain the same elements:
% (1) If Δ₁ ⋈ Δ₂ = Δ, then Δ₁ ≈ Δ (and so Δ₁ ≈ Δ by commutativity of merge)
% (2) If Δ₁ ⋈ Δ₂ = Δ, then Δ₁ ≈ Δ₂ [corollary of (1) using merge_comm, same_elts_refl, same_elts_trans]

rec merge_same_elts : (Ψ:ctx) (Δ:[Ψ ⊢ lctx N[]]) [Ψ ⊢ merge Δ₁ Δ₂ Δ] → [Ψ ⊢ same_elts Δ₁ Δ] =
  / total 1 /
  fn m ⇒ case m of
  | [_ ⊢ mg/n] ⇒ [_ ⊢ se/n]
  | [_ ⊢ mg/c MG1 _] ⇒ let [_ ⊢ SE] = merge_same_elts [_ ⊢ MG1] in [_ ⊢ se/c SE]
  ;

rec merge_same_elts_cor : (Ψ:ctx) (Δ:[Ψ ⊢ lctx N[]]) [Ψ ⊢ merge Δ₁ Δ₂ Δ] → [Ψ ⊢ same_elts Δ₁ Δ₂] =
  / total /
  fn m ⇒ same_elts_trans (merge_same_elts m) (same_elts_refl (merge_same_elts (merge_comm m)))
  ;