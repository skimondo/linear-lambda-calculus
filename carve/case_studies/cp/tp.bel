%======================================================%
% Linear logic propositions as types
%======================================================%

LF tp : type =
| ①  : tp
| ⊥  : tp
| ⊗  : tp → tp → tp
| ⅋  : tp → tp → tp
| &  : tp → tp → tp
| -o : tp → tp → tp
| ⊕  : tp → tp → tp;
--infix ⊗ 5 left.
--infix ⅋ 5 left.
--infix ⊕ 4 left.
--infix & 4 left.
--infix -o 5 right.

% Type equality

LF eq : tp → tp → type =
| refl : eq A A;

% Duality condition for CP

LF dual : tp → tp → type =
| D1 : dual ① ⊥
| D⊥ : dual ⊥ ①
| D⊗ : dual A A' → dual B B' → dual (A ⊗ B) (A' ⅋ B')
| D⅋ : dual A A' → dual B B' → dual (A ⅋ B) (A' ⊗ B')
| D& : dual A A' → dual B B' → dual (A & B) (A' ⊕ B')
| D⊕ : dual A A' → dual B B' → dual (A ⊕ B) (A' & B');
