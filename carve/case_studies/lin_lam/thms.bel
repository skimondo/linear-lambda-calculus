%======================================================%
% Theorems
%======================================================%

% Type preservation for the linear λ-calculus

rec tps : (Ψ:ctx) (Δ:[Ψ ⊢ lctx k[]]) [Ψ ⊢ oft Δ M A] → [Ψ ⊢ step M M'] → VarCtx [Ψ ⊢ Δ]
→ [Ψ ⊢ oft Δ M' A] =
  / total 1 /
  fn d, st, vc ⇒ case d of
  | [_ ⊢ oft/var U _] ⇒ let Is-Var = varctx_isvar vc [_ ⊢ U] in impossible st
  | [_ ⊢ oft/lam \x.O1] ⇒
    let [_ ⊢ s/lam \x.ST1] = st in
    let [_,x:obj ⊢ O1'] = tps [_,x:obj ⊢ O1] [_,x:obj ⊢ ST1] (varctx_extcons vc) in
    [_ ⊢ oft/lam \x.O1']
  | [_ ⊢ oft/app O1 O2 M1] ⇒
    case st of
    | [_ ⊢ s/app1 ST1] ⇒
      let [_ ⊢ O1'] = tps [_ ⊢ O1] [_ ⊢ ST1] (varctx_merge vc [_ ⊢ M1]) in
      [_ ⊢ oft/app O1' O2 M1]
    | [_ ⊢ s/app2 ST2] ⇒
      let [_ ⊢ O2'] = tps [_ ⊢ O2] [_ ⊢ ST2] (varctx_merge_r vc [_ ⊢ M1]) in 
      [_ ⊢ oft/app O1 O2' M1]
    | [_ ⊢ s/red] ⇒
      case [_ ⊢ O1] of
      | [_ ⊢ oft/var U _] ⇒ impossible varctx_isvar (varctx_merge vc [_ ⊢ M1]) [_ ⊢ U]
      | [_ ⊢ oft/lam \x.O1'] ⇒ sub_lem [_,x:obj ⊢ O1'] [_ ⊢ O2] [_ ⊢ M1]
  ;